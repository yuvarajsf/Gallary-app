name: Build and Release APK

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.9'
        channel: 'stable'
        cache: true
        
    - name: Verify Flutter installation
      run: |
        flutter --version
        flutter doctor -v
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Analyze code for errors
      run: flutter analyze --fatal-infos --fatal-warnings
      continue-on-error: false
      
    - name: Clean build cache
      run: flutter clean
      
    - name: Get dependencies again
      run: flutter pub get
      
    - name: Build APK (Release Only)
      run: flutter build apk --release --verbose --no-tree-shake-icons
      
    - name: Create release folder
      run: |
        mkdir -p release-files
        cp build/app/outputs/flutter-apk/app-release.apk release-files/gallery-app-release.apk
        
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gallery-app-release
        path: release-files/
        retention-days: 30
        
    - name: Get app version
      id: version
      run: |
        VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //' | tr -d ' ')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "App version: $VERSION"
        
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-files/gallery-app-release.apk
        name: Gallery App ${{ steps.version.outputs.VERSION }}
        body: |
          ## Gallery App Release ${{ steps.version.outputs.VERSION }}
          
          ### 📱 Download:
          - **gallery-app-release.apk** - Production ready APK for direct installation
          
          ### 🚀 Installation Instructions:
          1. Download the `gallery-app-release.apk` file
          2. Enable "Install from Unknown Sources" in your Android settings
          3. Install the APK on your device
          4. Follow the setup instructions in README.md
          
          ### 📋 Requirements:
          - Android 5.0 (API 21) or higher
          - Network access to your Python gallery server
          - Storage permission for thumbnails
          
          ### 🔧 Server Setup:
          Remember to:
          1. Run the Python server: `./python_server/run_server.sh` (Linux) or `python_server/run_server.bat` (Windows)
          2. Configure your gallery directory path in `python_server/gallery_server.py`
          3. Connect your device to the same network as your server
          
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Automatic Release (on main branch push)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        name: Gallery App - Latest Build
        files: |
          release-files/gallery-app-release.apk
        body: |
          ## 🔄 Latest Gallery App Build
          
          This is an automatic release created from the latest commit to the main branch.
          
          ### 📱 Download:
          - **gallery-app-release.apk** - Latest production ready APK
          
          ### ℹ️ Build Info:
          - **Commit**: ${{ github.sha }}
          - **Build Date**: ${{ github.run_id }}
          - **Flutter Version**: 3.16.9 stable
          
          ### 🚀 Quick Start:
          1. Download the APK file above
          2. Enable "Install from Unknown Sources" on your Android device
          3. Install the APK
          4. Set up your Python server (see README.md for details)
          5. Connect the app to your server
          
          > **Note**: This release is automatically updated with each commit to main branch.
          
        draft: false
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Comment PR with download links (on PR)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: artifacts } = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId,
          });
          
          const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
          
          const body = `## 📱 APK Build Complete!
          
          The Gallery App has been successfully built for this PR.
          
          ### 📥 Download Links:
          - [Build Artifacts (Release APK)](${artifactUrl}) - Click "gallery-app-release" to download
          
          ### 📦 What's included:
          - \`gallery-app-release.apk\` - Production ready APK
          
          ### ✅ Build Status:
          - Flutter version: 3.16.9 stable
          - Build type: Release only
          - Target: Android APK
          
          > **Note**: Artifacts are available for 30 days after the build.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

  build-info:
    runs-on: ubuntu-latest
    needs: build-android
    
    steps:
    - name: Build Summary
      run: |
        echo "## 🎉 Gallery App Release APK Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Generated Files:" >> $GITHUB_STEP_SUMMARY
        echo "- **Release APK**: Production ready APK for direct installation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📥 How to Download:" >> $GITHUB_STEP_SUMMARY
        echo "1. Go to the 'Actions' tab in your repository" >> $GITHUB_STEP_SUMMARY
        echo "2. Click on this workflow run" >> $GITHUB_STEP_SUMMARY
        echo "3. Download the 'gallery-app-release' artifact" >> $GITHUB_STEP_SUMMARY
        echo "4. Extract the zip file to get your APK" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🏷️ Release Tags:" >> $GITHUB_STEP_SUMMARY
        echo "Push a tag like \`v1.0.0\` to create a GitHub release with downloadable APK!" >> $GITHUB_STEP_SUMMARY
